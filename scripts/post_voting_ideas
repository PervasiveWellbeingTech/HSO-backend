#!/usr/bin/env node
// Generated by LiveScript 1.5.0
(function(){
  var mongodb, getsecret, fs, n2p, local_cache_db, getdb_running, mongourl, get_mongo_db, get_collection, get_collection_goal_ideas, get_collection_goal_idea_candidates, sleep, keep_trying, post_idea, goal_to_ideas, out$ = typeof exports != 'undefined' && exports || this;
  mongodb = require('mongodb');
  getsecret = require('getsecret');
  fs = require('fs');
  n2p = require('n2p');
  local_cache_db = null;
  getdb_running = false;
  mongourl = getsecret('MONGODB_URI_VOTING');
  out$.get_mongo_db = get_mongo_db = async function(){
    var err;
    if (local_cache_db != null) {
      return local_cache_db;
    }
    if (getdb_running) {
      while (getdb_running) {
        (await sleep(1));
      }
      while (getdb_running || local_cache_db === null) {
        (await sleep(1));
      }
      return local_cache_db;
    }
    getdb_running = true;
    try {
      local_cache_db = (await n2p(function(it){
        return mongodb.MongoClient.connect(mongourl, {}, it);
      }));
      return local_cache_db;
    } catch (e$) {
      err = e$;
      console.error('error getting mongodb');
      console.error(err);
    }
  };
  out$.get_collection = get_collection = async function(collection_name){
    var db;
    db = (await get_mongo_db());
    return db.collection(collection_name);
  };
  out$.get_collection_goal_ideas = get_collection_goal_ideas = async function(){
    return (await get_collection('get_collection_goal_ideas'));
  };
  out$.get_collection_goal_idea_candidates = get_collection_goal_idea_candidates = async function(){
    return (await get_collection('get_collection_goal_idea_candidates'));
  };
  sleep = async function(time){
    return new Promise(function(it){
      return setTimeout(it, time);
    });
  };
  keep_trying = async function(fn){
    var succeeded, output, error;
    succeeded = false;
    while (!succeeded) {
      try {
        output = (await n2p(fn));
        succeeded = true;
      } catch (e$) {
        error = e$;
        console.log(error);
        (await sleep(12000));
      }
    }
    return output;
  };
  out$.post_idea = post_idea = async function(goal, idea){
    var ideas, existing_ideas;
    ideas = (await get_collection_goal_ideas());
    existing_ideas = (await keep_trying(function(it){
      return ideas.find({
        goal: goal,
        idea: idea
      }).toArray(it);
    }));
    console.log('existing ideas');
    console.log(existing_ideas);
    if (existing_ideas.length > 0) {
      return;
    }
    (await keep_trying(function(it){
      return ideas.insert({
        goal: goal,
        idea: idea
      }, it);
    }));
  };
  goal_to_ideas = {
    'facebook/spend_less_time': ['Remove the unread notifications icon', 'Type out your goals for visiting Facebook']
  };
  (async function(){
    var i$, ref$, len$, goal, ideas, j$, len1$, idea;
    for (i$ = 0, len$ = (ref$ = Object.keys(goal_to_ideas)).length; i$ < len$; ++i$) {
      goal = ref$[i$];
      ideas = goal_to_ideas[goal];
      console.log(ideas);
      for (j$ = 0, len1$ = ideas.length; j$ < len1$; ++j$) {
        idea = ideas[j$];
        (await post_idea(goal, idea));
      }
    }
    return process.exit();
  })();
}).call(this);
